name: latest

on:
  push:
    branches:
    - main
    tags-ignore:
    - '**'
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: | 
        echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin docker.io
        MYAPP_VERSION=$(git rev-parse --short HEAD)
        docker buildx create --name mybuilder --driver docker-container --bootstrap --use
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx build --platform linux/amd64,linux/arm64 --build-arg BUILD_NAME=myapp --build-arg MYAPP_VERSION=${MYAPP_VERSION} --no-cache -t docker.io/mpgagebioinformatics/myapp:latest -f services/server/Dockerfile --push .
  
  # docker build . --tag docker.io/mpgagebioinformatics/flaski:dev
  # docker push docker.io/mpgagebioinformatics/flaski:dev

  slackNotification:
    needs: build
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
    - name: Slack Notification
      run: | 
        generate_post_data()
        {
          cat << EOF
        {
          "text": "myapp $GITHUB_SHA_SHORT build and push completed"
        }
        EOF
        } 
        curl -H "Content-Type: application/json" -X POST -d "$(generate_post_data)" ${secrets.SLACK_WEBHOOK}


  # slackNotification:
  #   needs: build
  #   name: Slack Notification
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Slack Notification
  #     uses: rtCamp/action-slack-notify@v2
  #     env:
  #       SLACK_USERNAME: github_action_bot
  #       SLACK_CHANNEL: flaski
  #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #       SLACK_TITLE: "[myapp] latest build and push completed"

