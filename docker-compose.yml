version: '3.7'

services:

 init:
  container_name: init
  image: mpgagebioinformatics/myapp:latest
  build:
    context: ./
    dockerfile: services/server/Dockerfile
    args:
      BUILD_NAME: myapp
      MYAPP_VERSION: dev
      UPGRADE_REQS: "no"
  user: root
  entrypoint: /myapp/services/init/entrypoint.sh
  volumes:
    - data:/${APP_NAME}_data/users
    - ./:/${APP_NAME}
    - ~/myapp_backup/stats:/backup/stats
    - ~/myapp_backup/users_data:/backup/users_data:ro
    - ~/myapp_backup/mariadb:/backup/mariadb:ro
  environment:
    - APP_NAME=myapp
    - FLASK_ENV=init
    - RESTORE_DB=0
    - RESTORE_USERS_DATA=0
    - DB_NAME=myapp
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - SECRET_KEY=${SECRET_KEY}
    - REDIS_ADDRESS=redis:6379/0
    - REDIS_PASSWORD=${REDIS_PASSWORD}
    - MYSQL_USER=${APP_NAME}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - MYSQL_HOST=mariadb
    - MYSQL_PORT=3306
    - ADMINS=jboucas@gmail.com
  links:
    - mariadb
  depends_on:
    - mariadb

 server:
  container_name: server
  image: mpgagebioinformatics/myapp:latest
  # ports:
  #   - 8887:8888 #jupyterhub
  build:
    context: ./
    dockerfile: services/server/Dockerfile
    args:
      BUILD_NAME: myapp
      MYAPP_VERSION: dev
      UPGRADE_REQS: "no"
  restart: always
  volumes:
   - data:/${APP_NAME}_data/users
   - ./:/${APP_NAME}
   - ~/myapp_private:/${APP_NAME}_private:ro
  environment:
   - N_WORKERS=1
   - APP_NAME=${APP_NAME}
   - APP_TITLE=myapp
   - DB_NAME=myapp
   - APP_URL=https://myapp.localhost # eg. https://myapp.localhost or a https://myapp.localhost/v3
   - PAGE_PREFIX="" # eg . "/v3"
   - LOGS=/var/log/${APP_NAME}/
   - SECRET_KEY=${SECRET_KEY}
  #  - SESSION_TYPE=sqlalchemy
   - REDIS_ADDRESS=redis:6379/0
   - REDIS_PASSWORD=${REDIS_PASSWORD}
   - MYSQL_USER=${APP_NAME}
   - MYSQL_PASSWORD=${MYSQL_PASSWORD}
   - MYSQL_HOST=mariadb
   - MYSQL_PORT=3306
   - FLASK_ENV=development
   - FLASK_DEBUG=1
   - PRIVATE_APPS=/${APP_NAME}_private/private.apps.tsv
   - INSTANCE=(DEV)
   - ADMINS=jboucas@gmail.com
   - MAIL_USERNAME=jboucas@gmail.com
  #  - MAIL_PORT=465 # comment if using the dev server
  #  - MAIL_USE_TLS=1 # comment if using the dev server
  labels:
  #  - traefik.enable=true
   - traefik.http.services.server.loadbalancer.server.port=8000
   - traefik.http.middlewares.server.redirectscheme.scheme=https
   - traefik.http.routers.server.entrypoints=web
   - traefik.http.routers.server.rule=Host(`myapp.localhost`)
   - traefik.http.routers.server.middlewares=server_https@docker
   - traefik.http.routers.server_https.rule=Host(`myapp.localhost`)
   - traefik.http.routers.server_https.tls=true
   - traefik.http.routers.server_https.entrypoints=websecure
  #  - traefik.http.routers.server_https.tls.certresolver=myresolver

  links:
   - mariadb
   - redis
  depends_on:
   - init
   - mariadb
   - redis

 backup:
  container_name: backup
  image: mpgagebioinformatics/myapp:latest
  build:
    context: ./
    dockerfile: ./services/server/Dockerfile
    args:
      BUILD_NAME: myapp
      MYAPP_VERSION: dev
      UPGRADE_REQS: "no"
  user: root
  entrypoint: /myapp/services/backup/entrypoint.sh
  depends_on:
   - mariadb
   - init
  volumes:
   - ~/myapp_backup/mariadb:/backup/mariadb
   - ~/myapp_backup/users_data:/backup/users_data
   - data:/${APP_NAME}_data/users:ro
  environment:
   - APP_NAME=myapp
   - APP_TITLE=myapp
   - DB_NAME=myapp
   - MYSQL_USER=${APP_NAME}
   - MYSQL_PASSWORD=${MYSQL_PASSWORD}
   - MYSQL_HOST=mariadb
   - MYSQL_PORT=3306
   - MAX_BACKUPS=15
   - INIT_BACKUP=0
   # Every day at 03:00
   - CRON_TIME=44 13 * * *
   - FLASK_ENV=backup
  restart: unless-stopped
  links:
   - mariadb

 mariadb:
  container_name: mariadb
  image: mariadb:10.5
  restart: always
  volumes:
   - db:/var/lib/mysql
  environment:
   - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

 redis:
  container_name: redis
  image: redis:7
  restart: always
  command: redis-server --requirepass ${REDIS_PASSWORD}

 reverse-proxy:
  image: traefik:v2.6
  command: 
    - --api.insecure=true
    - --providers.docker=true
    - --entrypoints.websecure.address=:443
    - --entrypoints.web.address=:80
    # self provided certificates
    # - --providers.file.filename=/etc/traefik/dynamic_conf/conf.yml
    # - --providers.file.watch=true
    # letsencrypt for properly signed certificates
    # - --providers.docker.exposedbydefault=false
    # - --certificatesresolvers.myresolver.acme.httpchallenge=true
    # - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    # - --certificatesresolvers.myresolver.acme.tlschallenge=true
    # - --certificatesresolvers.myresolver.acme.email=<your@email.com>
    # - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    # letsencrypt staging
    # - --log.level=DEBUG
    # - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
  ports:
    - "80:80"
    - "443:443"
  volumes:
    # self-provided certificates
    # - ./services/traefik/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro
    # letsencrypt
    # - le:/letsencrypt
    - /var/run/docker.sock:/var/run/docker.sock
  labels:
    - traefik.enable=false
  depends_on:
  - server

#  nginx:
#   container_name: nginx
#   image: nginx:alpine
#   restart: always
#   ports:
#    - 80:80
#    - 443:443
#   volumes:
#    - ./services/nginx/dev.conf:/etc/nginx/conf.d/default.conf:rw
#    - ~/myapp_data/certificates/cert.pem:/certs/cert.pem:ro 
#    - ~/myapp_data/certificates/key.pem:/certs/key.pem:ro
#    - ~/myapp_data/certificates/dhparam.pem:/certs/dhparam.pem:ro
#   links:
#    - server
#   depends_on:
#    - server

volumes:
 data:
  external: false
 db:
  external: false
 # letsencrypt
#  le:
#   external: false
