name: tag

on:
  push:
    tags: [ '*.*.*' ]
    
jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Remove unnecessary files
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - uses: actions/checkout@v2
    - name: Upgrade QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu binfmt-support qemu-user-static
    - name: Fix QEMU binfmt
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build the Docker image
      run: | 
        echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin docker.io
        MYAPP_VERSION=${GITHUB_REF#refs/*/}
        git clone https://github.com/mpg-age-bioinformatics/myapp.git ${MYAPP_VERSION}
        cd ${MYAPP_VERSION}
        git checkout ${MYAPP_VERSION}
        docker buildx create --name mybuilder --driver docker-container --bootstrap --use
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx build --platform linux/amd64,linux/arm64 --build-arg BUILD_NAME=myapp --build-arg MYAPP_VERSION=${MYAPP_VERSION} --no-cache -t docker.io/mpgagebioinformatics/myapp:stable -t docker.io/mpgagebioinformatics/myapp:latest -t docker.io/mpgagebioinformatics/myapp:${MYAPP_VERSION} -f services/server/Dockerfile --push .
    - name: Set Success env
      run: echo "GITHUB_SHA_SHORT=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Slack Success Notification
      run: | 
        generate_post_data()
        {
          cat << EOF
        {
          "text": "myapp $GITHUB_SHA_SHORT build and push completed"
        }
        EOF
        } 
        curl -H "Content-Type: application/json" -X POST -d "$(generate_post_data)" ${{ secrets.SLACK_WEBHOOK }}
    - name: Set Failure env
      if: failure()
      run: echo "GITHUB_SHA_SHORT=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Slack Failure Notification
      if: failure()
      run: | 
        generate_post_data()
        {
          cat << EOF
        {
          "text": "myapp $GITHUB_SHA_SHORT build and push FAILED"
        }
        EOF
        } 
        curl -H "Content-Type: application/json" -X POST -d "$(generate_post_data)" ${{ secrets.SLACK_WEBHOOK }}

